{
  "result": {
    "data": [
      {
        "createdAt": "2025-09-22T12:47:40.942Z",
        "updatedAt": "2025-09-22T12:47:40.942Z",
        "id": "x85JmYFbyVWjpvjd",
        "name": "My workflow",
        "active": false,
        "isArchived": false,
        "nodes": [
          {
            "parameters": {},
            "id": "81817cdc-31fa-40af-925e-d08107811f5f",
            "name": "When clicking ‘Execute workflow’",
            "type": "n8n-nodes-base.manualTrigger",
            "position": [
              -608,
              464
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "or",
                "conditions": [
                  {
                    "id": "3cf5b451-9ff5-4c2a-864f-9aa7d286871a",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "Ready"
                  },
                  {
                    "id": "a9b6d102-bb38-443f-a204-1c07476cb360",
                    "operator": {
                      "type": "number",
                      "operation": "gt"
                    },
                    "leftValue": "={{ $runIndex }}",
                    "rightValue": 5
                  }
                ]
              },
              "options": {}
            },
            "id": "6f5c159c-18c6-4cbe-9624-b17ac38075b9",
            "name": "Is Ready?",
            "type": "n8n-nodes-base.if",
            "position": [
              80,
              864
            ],
            "typeVersion": 2.2
          },
          {
            "parameters": {
              "url": "https://api.bfl.ml/v1/get_result",
              "authentication": "genericCredentialType",
              "genericAuthType": "httpHeaderAuth",
              "sendQuery": true,
              "queryParameters": {
                "parameters": [
                  {
                    "name": "id",
                    "value": "={{ $json.id }}"
                  }
                ]
              },
              "options": {}
            },
            "id": "c1bb6347-e6e6-4335-82c4-7dcb57e30fcf",
            "name": "Check FLUX status",
            "type": "n8n-nodes-base.httpRequest",
            "position": [
              -96,
              864
            ],
            "typeVersion": 4.2
          },
          {
            "parameters": {
              "content": "# Image processing part",
              "height": 282,
              "width": 862,
              "color": 7
            },
            "id": "c0539256-1413-49ae-9c94-309534d05e69",
            "name": "Sticky Note1",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              -496,
              784
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "inputSource": "passthrough"
            },
            "id": "b539debb-cbc1-4265-b59d-f61a900b7023",
            "name": "When Executed by Another Workflow",
            "type": "n8n-nodes-base.executeWorkflowTrigger",
            "position": [
              -816,
              864
            ],
            "typeVersion": 1.1
          },
          {
            "parameters": {
              "method": "POST",
              "url": "https://api.bfl.ml/v1/flux-kontext-pro",
              "authentication": "genericCredentialType",
              "genericAuthType": "httpHeaderAuth",
              "sendBody": true,
              "bodyParameters": {
                "parameters": [
                  {
                    "name": "input_image",
                    "value": "={{ $json[$('When Executed by Another Workflow').first().json.binaryin] }}"
                  },
                  {
                    "name": "prompt",
                    "value": "={{ $('When Executed by Another Workflow').first().json.prompt }}"
                  },
                  {
                    "name": "prompt_upsampling",
                    "value": "={{ false }}"
                  },
                  {
                    "name": "output_format",
                    "value": "png"
                  },
                  {
                    "name": " aspect_ratio",
                    "value": "1:1"
                  }
                ]
              },
              "options": {}
            },
            "id": "c2d05e7e-4f89-4924-9d04-865131a00c95",
            "name": "FLUX Kontext",
            "type": "n8n-nodes-base.httpRequest",
            "position": [
              -432,
              864
            ],
            "typeVersion": 4.2
          },
          {
            "parameters": {
              "mode": "combine",
              "combineBy": "combineByPosition",
              "options": {
                "includeUnpaired": true
              }
            },
            "id": "34ee2e0c-f2b7-449c-8740-e682618dd3a5",
            "name": "Merge",
            "type": "n8n-nodes-base.merge",
            "position": [
              -16,
              464
            ],
            "typeVersion": 3.1
          },
          {
            "parameters": {
              "amount": 2
            },
            "id": "d5960358-0342-4b23-b0a2-cc8bee7835ca",
            "name": "Wait 2 sec",
            "type": "n8n-nodes-base.wait",
            "position": [
              -256,
              864
            ],
            "webhookId": "3df5a762-edab-49df-ac70-be3b56545212",
            "typeVersion": 1.1
          },
          {
            "parameters": {
              "content": "## Define prompts here\nPrepare an array of prompts that will be used one by one on the next steps. Update limit in the `Number of Steps` node if you need more than 5 iterations.",
              "height": 260,
              "width": 380
            },
            "id": "9ba51182-b714-412e-abd0-714a3253ebb3",
            "name": "Sticky Note",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              -448,
              224
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "content": "## Load the initial image",
              "height": 220,
              "width": 380
            },
            "id": "1881488c-b314-42b9-b13e-3a33ecda220e",
            "name": "Sticky Note2",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              -448,
              528
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "content": "## Initial example\n![](https://raw.githubusercontent.com/teds-tech-talks/n8n-community-leaderboard/main/_creators/eduard/mascot.png)",
              "height": 400,
              "width": 260
            },
            "id": "002a7d78-6458-4d52-b131-47b01ced7f7d",
            "name": "Sticky Note3",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              -768,
              48
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "authentication": "oAuth2",
              "resource": "file",
              "operation": "get",
              "owner": {
                "__rl": true,
                "mode": "name",
                "value": "teds-tech-talks"
              },
              "repository": {
                "__rl": true,
                "mode": "name",
                "value": "n8n-community-leaderboard"
              },
              "filePath": "_creators/eduard/mascot.png",
              "asBinaryProperty": false,
              "additionalParameters": {}
            },
            "id": "c0d58236-8fc0-4ddf-8066-5e7b2de5ed60",
            "name": "Get File from GitHub",
            "type": "n8n-nodes-base.github",
            "position": [
              -416,
              592
            ],
            "webhookId": "e70d0c46-6478-4c11-85a6-8b7e1f9588de",
            "typeVersion": 1.1
          },
          {
            "parameters": {
              "url": "={{ $json.download_url }}",
              "options": {
                "response": {
                  "response": {
                    "responseFormat": "file",
                    "outputPropertyName": "data0"
                  }
                }
              }
            },
            "id": "5859c610-114b-4fe7-85d9-c6531c36a993",
            "name": "Download Initial Image",
            "type": "n8n-nodes-base.httpRequest",
            "position": [
              -208,
              592
            ],
            "typeVersion": 4.2
          },
          {
            "parameters": {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "4d3dcb8f-c435-40fd-aca6-a37647fc3a10",
                    "operator": {
                      "type": "number",
                      "operation": "lt"
                    },
                    "leftValue": "={{ $runIndex }}",
                    "rightValue": "={{ $json.Steps }}"
                  }
                ]
              },
              "options": {}
            },
            "id": "b1c8c5d8-ee5b-4f22-8af7-5d98af3a61e4",
            "name": "If",
            "type": "n8n-nodes-base.if",
            "position": [
              256,
              464
            ],
            "typeVersion": 2.2
          },
          {
            "parameters": {
              "assignments": {
                "assignments": [
                  {
                    "id": "9e3d00d0-467a-41c8-aaa1-f1d29694737c",
                    "name": "Steps",
                    "type": "number",
                    "value": "={{ Math.min($json.Prompts.length,5) }}"
                  }
                ]
              },
              "includeOtherFields": true,
              "options": {}
            },
            "id": "3228067a-11c6-4481-903d-2010c47df7dc",
            "name": "Number of Steps",
            "type": "n8n-nodes-base.set",
            "position": [
              -208,
              352
            ],
            "typeVersion": 3.4
          },
          {
            "parameters": {
              "assignments": {
                "assignments": [
                  {
                    "id": "64e9c28e-a60a-499b-aa89-177bf952959f",
                    "name": "Prompts",
                    "type": "array",
                    "value": "=[\"Make this animal mascot coming out of the builing with wearing an official business suite. Preserve the exact character features and style\",\"Now make this animal mascot sitting in the terrace mediterranian cafe. Preserve the exact character features and style, but wearing hawaii shorts instead of trouses\",\"Now make this animal mascot standing on the beach with a starfish in it's hands, waring only hawaii shorts. Preserve the exact character features and style.\"]"
                  }
                ]
              },
              "options": {}
            },
            "id": "4e0aae02-6bf0-4764-8545-a69555534b64",
            "name": "All Prompts",
            "type": "n8n-nodes-base.set",
            "position": [
              -416,
              352
            ],
            "typeVersion": 3.4
          },
          {
            "parameters": {
              "workflowId": {
                "__rl": true,
                "mode": "list",
                "value": "AdtCs47Lt1Wtf2Dt",
                "cachedResultName": "Upload-Post And FLUX Kontext"
              },
              "workflowInputs": {
                "value": {},
                "schema": [],
                "mappingMode": "defineBelow",
                "matchingColumns": [],
                "attemptToConvertTypes": false,
                "convertFieldsToString": true
              },
              "options": {}
            },
            "id": "86542043-08ec-4d60-8cb5-9b18a7070e72",
            "name": "Run FLUX",
            "type": "n8n-nodes-base.executeWorkflow",
            "position": [
              704,
              368
            ],
            "typeVersion": 1.2
          },
          {
            "parameters": {
              "assignments": {
                "assignments": [
                  {
                    "id": "64e9c28e-a60a-499b-aa89-177bf952959f",
                    "name": "prompt",
                    "type": "string",
                    "value": "={{ $json.Prompts[$runIndex] }}"
                  },
                  {
                    "id": "aee3c455-ced2-4520-a088-18ffaf6db11c",
                    "name": "binaryin",
                    "type": "string",
                    "value": "=data{{ $runIndex }}"
                  },
                  {
                    "id": "61cccca2-7b0c-4ea6-82f3-5dc2a377c3cb",
                    "name": "binaryout",
                    "type": "string",
                    "value": "=data{{ Number($runIndex)+1 }}"
                  },
                  {
                    "id": "0cbe4309-e6f0-4c65-87f6-95bf6609aade",
                    "name": "currentstep",
                    "type": "number",
                    "value": "={{ $runIndex }}"
                  }
                ]
              },
              "includeOtherFields": true,
              "include": "selected",
              "includeFields": "Prompts, Steps",
              "options": {}
            },
            "id": "94343e9d-e27b-4d98-a7f3-c037690e04a4",
            "name": "Current Step",
            "type": "n8n-nodes-base.set",
            "position": [
              464,
              464
            ],
            "typeVersion": 3.4
          },
          {
            "parameters": {
              "mode": "combine",
              "combineBy": "combineByPosition",
              "options": {}
            },
            "id": "11fab0b2-b2ad-40ad-ac4c-68bb914a685d",
            "name": "Merge3",
            "type": "n8n-nodes-base.merge",
            "position": [
              896,
              448
            ],
            "typeVersion": 3.2
          },
          {
            "parameters": {
              "content": "## Iterate over prompts\n- On each step a next prompt it taken from the original array\n- Outputs from the previous FLUX Kontext request are moved forward to the subsequent generation",
              "height": 380,
              "width": 860
            },
            "id": "294243ac-efcd-4e45-b8f3-08ad7524a384",
            "name": "Sticky Note4",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              192,
              272
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "content": "## [Post several images via Upload Post](https://www.upload-post.com/?linkId=lp_144414&sourceId=post-now&tenantId=upload-post-app)\n[Click to create your own account](https://www.upload-post.com/?linkId=lp_144414&sourceId=post-now&tenantId=upload-post-app)",
              "height": 280,
              "width": 260,
              "color": 5
            },
            "id": "3dadbe5c-a6dc-47a3-9b01-3334c6269dfb",
            "name": "Sticky Note5",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              672,
              688
            ],
            "typeVersion": 1
          },
          {
            "parameters": {},
            "id": "49fde278-bae5-429e-aef4-507cfa89182b",
            "name": "Upload Post",
            "type": "n8n-nodes-upload-post.uploadPost",
            "position": [
              704,
              800
            ],
            "typeVersion": 1,
            "credentials": {}
          },
          {
            "parameters": {
              "operation": "binaryToPropery",
              "binaryPropertyName": "={{ $('When Executed by Another Workflow').first().json.binaryin }}",
              "destinationKey": "={{ $('When Executed by Another Workflow').first().json.binaryin }}",
              "options": {}
            },
            "id": "cc9e91e8-2ba9-42e3-acd7-7985fc2eaa5c",
            "name": "Image to Base64",
            "type": "n8n-nodes-base.extractFromFile",
            "position": [
              -624,
              864
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "url": "={{ $json.result.sample }}",
              "options": {
                "response": {
                  "response": {
                    "responseFormat": "file",
                    "outputPropertyName": "={{ $('When Executed by Another Workflow').first().json.binaryout }}"
                  }
                }
              }
            },
            "id": "69ccf5f5-fdd0-4b6d-8490-5599e48f81dd",
            "name": "Get Image",
            "type": "n8n-nodes-base.httpRequest",
            "position": [
              256,
              864
            ],
            "typeVersion": 4.2
          },
          {
            "parameters": {
              "content": "## Step 1\n![](https://pbs.twimg.com/media/Gs7SwU_XYAASZBn?format=jpg&name=medium)",
              "height": 400,
              "width": 260
            },
            "id": "1ab27e16-8b67-48cb-b343-a65ee30d1514",
            "name": "Sticky Note6",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              192,
              -160
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "content": "## Step 2\n![](https://pbs.twimg.com/media/Gs7SwovWQAAncQT?format=jpg&name=medium)",
              "height": 400,
              "width": 260
            },
            "id": "0ace4ce2-9ef7-4056-89f6-e887c978ca4a",
            "name": "Sticky Note7",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              496,
              -160
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "content": "## Step 3\n![](https://pbs.twimg.com/media/Gs7SxHsXYAAkhPF?format=jpg&name=medium)",
              "height": 400,
              "width": 260
            },
            "id": "63506983-df1d-4994-af33-641767cd267c",
            "name": "Sticky Note8",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              800,
              -160
            ],
            "typeVersion": 1
          }
        ],
        "connections": {
          "If": {
            "main": [
              [
                {
                  "node": "Current Step",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Merge": {
            "main": [
              [
                {
                  "node": "If",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Merge3": {
            "main": [
              [
                {
                  "node": "If",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Run FLUX": {
            "main": [
              [
                {
                  "node": "Merge3",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Is Ready?": {
            "main": [
              [
                {
                  "node": "Get Image",
                  "type": "main",
                  "index": 0
                }
              ],
              [
                {
                  "node": "Wait 2 sec",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Wait 2 sec": {
            "main": [
              [
                {
                  "node": "Check FLUX status",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "All Prompts": {
            "main": [
              [
                {
                  "node": "Number of Steps",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Current Step": {
            "main": [
              [
                {
                  "node": "Run FLUX",
                  "type": "main",
                  "index": 0
                },
                {
                  "node": "Merge3",
                  "type": "main",
                  "index": 1
                }
              ]
            ]
          },
          "FLUX Kontext": {
            "main": [
              [
                {
                  "node": "Wait 2 sec",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Image to Base64": {
            "main": [
              [
                {
                  "node": "FLUX Kontext",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Number of Steps": {
            "main": [
              [
                {
                  "node": "Merge",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Check FLUX status": {
            "main": [
              [
                {
                  "node": "Is Ready?",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Get File from GitHub": {
            "main": [
              [
                {
                  "node": "Download Initial Image",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Download Initial Image": {
            "main": [
              [
                {
                  "node": "Merge",
                  "type": "main",
                  "index": 1
                }
              ]
            ]
          },
          "When Executed by Another Workflow": {
            "main": [
              [
                {
                  "node": "Image to Base64",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "When clicking ‘Execute workflow’": {
            "main": [
              [
                {
                  "node": "Get File from GitHub",
                  "type": "main",
                  "index": 0
                },
                {
                  "node": "All Prompts",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          }
        },
        "settings": {
          "executionOrder": "v1"
        },
        "staticData": null,
        "meta": null,
        "pinData": {},
        "versionId": "37f2155a-eec8-4f9e-8276-ba41c9c6519d",
        "triggerCount": 0,
        "shared": [
          {
            "createdAt": "2025-09-22T12:47:40.942Z",
            "updatedAt": "2025-09-22T12:47:40.942Z",
            "role": "workflow:owner",
            "workflowId": "x85JmYFbyVWjpvjd",
            "projectId": "XDSXqJERuGM10SXD"
          }
        ],
        "tags": []
      },
      {
        "createdAt": "2025-09-22T12:48:19.630Z",
        "updatedAt": "2025-09-22T12:48:19.630Z",
        "id": "M0S8p67oqLvARijJ",
        "name": "backup",
        "active": false,
        "isArchived": false,
        "nodes": [
          {
            "parameters": {
              "rule": {
                "interval": [
                  {}
                ]
              }
            },
            "id": "9150f5a9-861c-49e4-b1f9-058b3b613301",
            "name": "Schedule Trigger",
            "type": "n8n-nodes-base.scheduleTrigger",
            "position": [
              -144,
              144
            ],
            "typeVersion": 1.2
          },
          {
            "parameters": {
              "filters": {},
              "requestOptions": {}
            },
            "id": "47d8b1bb-aa7b-4792-b09a-8ba964b43830",
            "name": "Retrieve workflows",
            "type": "n8n-nodes-base.n8n",
            "position": [
              352,
              144
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "fieldsToAggregate": {
                "fieldToAggregate": [
                  {
                    "fieldToAggregate": "name"
                  }
                ]
              },
              "options": {}
            },
            "id": "520c2e98-cdac-4e0a-bec5-4e39bda4c88a",
            "name": "Aggregate",
            "type": "n8n-nodes-base.aggregate",
            "position": [
              192,
              144
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "authentication": "oAuth2",
              "resource": "file",
              "operation": "list",
              "owner": {
                "__rl": true,
                "mode": "name",
                "value": ""
              },
              "repository": {
                "__rl": true,
                "mode": "list",
                "value": ""
              },
              "filePath": "="
            },
            "id": "6e2bb3da-c110-4a0d-bd8e-06665a911690",
            "name": "List files from repo",
            "type": "n8n-nodes-base.github",
            "position": [
              32,
              144
            ],
            "webhookId": "354d699e-44b0-4444-9d31-af7fd4ff5561",
            "typeVersion": 1,
            "alwaysOutputData": true
          },
          {
            "parameters": {
              "authentication": "oAuth2",
              "resource": "file",
              "operation": "edit",
              "owner": {
                "__rl": true,
                "mode": "name",
                "value": ""
              },
              "repository": {
                "__rl": true,
                "mode": "list",
                "value": ""
              },
              "filePath": "={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json",
              "fileContent": "={{ $('To base64').item.json.data }}",
              "commitMessage": "=backup-{{ $('Commit date & file name').item.json.commitDate }}"
            },
            "id": "549a6cd6-f956-4c85-9d3d-60254aaba4be",
            "name": "Update file",
            "type": "n8n-nodes-base.github",
            "position": [
              1152,
              64
            ],
            "webhookId": "27218087-8df7-474d-a39f-70cfa9c34ec8",
            "typeVersion": 1
          },
          {
            "parameters": {
              "authentication": "oAuth2",
              "resource": "file",
              "owner": {
                "__rl": true,
                "mode": "name",
                "value": ""
              },
              "repository": {
                "__rl": true,
                "mode": "list",
                "value": ""
              },
              "filePath": "={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json",
              "fileContent": "={{ $('To base64').item.json.data }}",
              "commitMessage": "=backup-{{ $node['Commit date & file name'].json.commitDate }}"
            },
            "id": "85dca977-fc72-4ba3-9c0d-352dd5f48122",
            "name": "Upload file",
            "type": "n8n-nodes-base.github",
            "position": [
              1152,
              224
            ],
            "webhookId": "ce4b561b-acb9-4cd8-b76f-4928dada9674",
            "typeVersion": 1
          },
          {
            "parameters": {
              "conditions": {
                "string": [
                  {
                    "value1": "={{ $('Aggregate').item.json.name }}",
                    "operation": "contains",
                    "value2": "={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json"
                  }
                ]
              }
            },
            "id": "cd7414ad-790a-4d76-8d6f-bbd795ec5956",
            "name": "Check if file exists",
            "type": "n8n-nodes-base.if",
            "position": [
              992,
              144
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "operation": "toJson",
              "mode": "each",
              "options": {
                "format": true
              }
            },
            "id": "a5fc8e8d-bf37-4f18-a540-da4e56c8eaff",
            "name": "Json file",
            "type": "n8n-nodes-base.convertToFile",
            "position": [
              512,
              144
            ],
            "typeVersion": 1.1
          },
          {
            "parameters": {
              "operation": "binaryToPropery",
              "options": {}
            },
            "id": "0edf8f89-0f06-4300-817c-e1c069302151",
            "name": "To base64",
            "type": "n8n-nodes-base.extractFromFile",
            "position": [
              672,
              144
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "content": "### Retrieve previous file names from Github",
              "height": 380,
              "width": 300,
              "color": 5
            },
            "id": "8d466cf9-475c-4f30-ad31-357541d9c98d",
            "name": "Sticky Note1",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              0,
              0
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "assignments": {
                "assignments": [
                  {
                    "id": "fe4a36ef-9f04-40e3-99bd-cc517a49b440",
                    "name": "commitDate",
                    "type": "string",
                    "value": "={{ $now.format('dd-MM-yyyy/H:mm') }}"
                  },
                  {
                    "id": "b0fe1bcc-e79c-4a6b-b8b4-44222c8bf4e8",
                    "name": "fileName",
                    "type": "string",
                    "value": "={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json"
                  }
                ]
              },
              "options": {}
            },
            "id": "8f52bbc4-e56c-45be-ae75-90f2a4334d7d",
            "name": "Commit date & file name",
            "type": "n8n-nodes-base.set",
            "position": [
              832,
              144
            ],
            "typeVersion": 3.4
          },
          {
            "parameters": {
              "content": "### Retrieve and process workflows from n8n",
              "height": 380,
              "width": 460,
              "color": 3
            },
            "id": "3f781ed7-bf05-4c0d-badd-b46f87edd555",
            "name": "Sticky Note2",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              320,
              0
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "content": "### Commit + edit/create files if needed",
              "height": 380,
              "width": 460,
              "color": 4
            },
            "id": "43bff3b2-10fb-4ace-a5d8-b51578d9436f",
            "name": "Sticky Note3",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              800,
              0
            ],
            "typeVersion": 1
          }
        ],
        "connections": {
          "Aggregate": {
            "main": [
              [
                {
                  "node": "Retrieve workflows",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Json file": {
            "main": [
              [
                {
                  "node": "To base64",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "To base64": {
            "main": [
              [
                {
                  "node": "Commit date & file name",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Schedule Trigger": {
            "main": [
              [
                {
                  "node": "List files from repo",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Retrieve workflows": {
            "main": [
              [
                {
                  "node": "Json file",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Check if file exists": {
            "main": [
              [
                {
                  "node": "Update file",
                  "type": "main",
                  "index": 0
                }
              ],
              [
                {
                  "node": "Upload file",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "List files from repo": {
            "main": [
              [
                {
                  "node": "Aggregate",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Commit date & file name": {
            "main": [
              [
                {
                  "node": "Check if file exists",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          }
        },
        "settings": {
          "executionOrder": "v1"
        },
        "staticData": null,
        "meta": null,
        "pinData": {},
        "versionId": "8b717403-92ce-403d-b61e-cf66eb8865e7",
        "triggerCount": 0,
        "shared": [
          {
            "createdAt": "2025-09-22T12:48:19.630Z",
            "updatedAt": "2025-09-22T12:48:19.630Z",
            "role": "workflow:owner",
            "workflowId": "M0S8p67oqLvARijJ",
            "projectId": "XDSXqJERuGM10SXD"
          }
        ],
        "tags": []
      },
      {
        "createdAt": "2025-09-22T12:48:56.558Z",
        "updatedAt": "2025-09-22T12:48:56.558Z",
        "id": "pKdCthU583MCDBkX",
        "name": "github_robot",
        "active": false,
        "isArchived": false,
        "nodes": [
          {
            "parameters": {
              "model": {
                "__rl": true,
                "mode": "list",
                "value": "gpt-4o-mini"
              },
              "options": {}
            },
            "id": "00b398c7-10a8-4801-8de0-8e2af37b168d",
            "name": "OpenAI Chat Model",
            "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
            "position": [
              320,
              480
            ],
            "typeVersion": 1.2
          },
          {
            "parameters": {
              "authentication": "oAuth2",
              "owner": {
                "__rl": true,
                "mode": "list",
                "value": "",
                "cachedResultUrl": "",
                "cachedResultName": ""
              },
              "repository": {
                "__rl": true,
                "mode": "list",
                "value": "",
                "cachedResultUrl": "",
                "cachedResultName": ""
              },
              "events": [
                "pull_request"
              ],
              "options": {}
            },
            "id": "af3bc7be-a042-40ee-9fce-70035ac86d77",
            "name": "PR Trigger",
            "type": "n8n-nodes-base.githubTrigger",
            "position": [
              -320,
              272
            ],
            "webhookId": "2b8ec7bd-e65b-46d2-a2d9-082b137dd880",
            "notesInFlow": false,
            "typeVersion": 1
          },
          {
            "parameters": {
              "url": "=https://api.github.com/repos/{{$json.body.sender.login}}/{{$json.body.repository.name}}/pulls/{{$json.body.number}}/files",
              "options": {}
            },
            "id": "3e450df4-caea-4656-aae9-c29eb323788a",
            "name": "Get file's Diffs from PR",
            "type": "n8n-nodes-base.httpRequest",
            "position": [
              -96,
              272
            ],
            "typeVersion": 4.2
          },
          {
            "parameters": {
              "jsCode": "const files = $input.all().map(item => item.json);\n\nlet diffs = '';\n\nfor (const file of files) {\n  diffs += `### Fichier : ${file.filename}\\n\\n`;\n\n  if (file.patch) {\n    // IMPORTANT : On remplace tous les triple backticks par simple (ou échappement)\n    const safePatch = file.patch.replace(/```/g, \"''\");\n\n    diffs += \"```diff\\n\";\n    diffs += safePatch;\n    diffs += \"\\n```\\n\";\n  } else {\n    diffs += \"_Pas de patch disponible (probablement fichier binaire)._\";\n  }\n\n  diffs += \"\\n---\\n\\n\";\n}\n\nconst userMessage = `\nYou are a senior iOS developer. \nPlease review the following code changes in these files :\n\n${diffs}\n\n---\n\nYour mission:\n\n- Review the proposed code changes file by file and by significant modification.\n\n- Generate inline comments on the relevant lines of code.\n\n- Ignore files without patches.\n\n- Do not repeat the code snippet or the filename.\n\n- Write the comments directly, without introducing the context.\n`;\n\nreturn [\n  {\n    json: {\n      user_message: userMessage.trim()\n    }\n  }\n];"
            },
            "id": "48741426-3c2f-4a82-b741-dce67c4e4fdd",
            "name": "Create target Prompt from PR Diffs",
            "type": "n8n-nodes-base.code",
            "position": [
              128,
              272
            ],
            "typeVersion": 2
          },
          {
            "parameters": {
              "resource": "review",
              "owner": {
                "__rl": true,
                "mode": "list",
                "value": "",
                "cachedResultUrl": "",
                "cachedResultName": ""
              },
              "repository": {
                "__rl": true,
                "mode": "list",
                "value": "",
                "cachedResultUrl": "",
                "cachedResultName": ""
              },
              "pullRequestNumber": "={{ $('PR Trigger').first().json.body.number }}",
              "event": "comment",
              "body": "={{ $json.output }}",
              "additionalFields": {}
            },
            "id": "3d9ba364-dea2-4b29-a729-5e0af955017d",
            "name": "GitHub Robot",
            "type": "n8n-nodes-base.github",
            "position": [
              720,
              272
            ],
            "webhookId": "39c2fe8b-f686-4699-8450-2a5b4c263d93",
            "typeVersion": 1.1
          },
          {
            "parameters": {
              "authentication": "oAuth2",
              "operation": "edit",
              "owner": {
                "__rl": true,
                "mode": "list",
                "value": "",
                "cachedResultUrl": "",
                "cachedResultName": ""
              },
              "repository": {
                "__rl": true,
                "mode": "list",
                "value": "",
                "cachedResultUrl": "",
                "cachedResultName": ""
              },
              "issueNumber": "={{ $('PR Trigger').first().json.body.number }}",
              "editFields": {
                "labels": [
                  {
                    "label": "ReviewedByAI"
                  }
                ]
              }
            },
            "id": "51b9d093-c61c-4aa1-bf71-c5162356e6ca",
            "name": "Add Label to PR",
            "type": "n8n-nodes-base.github",
            "position": [
              944,
              272
            ],
            "webhookId": "c98f39f1-603b-4013-9149-53b4cc31b611",
            "typeVersion": 1
          },
          {
            "parameters": {
              "documentId": {
                "__rl": true,
                "mode": "url",
                "value": ""
              },
              "sheetName": {
                "__rl": true,
                "mode": "name",
                "value": ""
              }
            },
            "id": "cab3da7c-be97-412c-a274-f650b2ddec0c",
            "name": "Code Best Practices",
            "type": "n8n-nodes-base.googleSheetsTool",
            "position": [
              496,
              480
            ],
            "typeVersion": 4.5
          },
          {
            "parameters": {
              "content": "**1-The GitHub Trigger** node initiates the workflow whenever a pull request event occurs on a specified repository. It enables real-time automation based on GitHub activity.\n"
            },
            "id": "608cfe8c-3889-4c67-8e70-e4e23473d3f6",
            "name": "Sticky Note",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              -464,
              80
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "content": "**2-Get PR Diffs**\nThe HTTP Request node fetches the list of changed files and their diffs from the pull request that triggered the workflow. It uses the GitHub REST API to retrieve this data dynamically based on the trigger payload.\n\nhttps://api.github.com/repos/{{$json.body.sender.login}}/{{$json.body.repository.name}}/pulls/{{$json.body.number}}/files",
              "height": 220,
              "width": 340,
              "color": 3
            },
            "id": "9f632013-a6cb-4aba-994d-a32fa136146b",
            "name": "Sticky Note1",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              -256,
              448
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "content": "**3-Create Prompt from diffs**\nThis Code node runs a JavaScript snippet to:\n-Parse file diffs from the previous HTTP Request node\n-Format each diff with its file name\n-Build a structured natural language prompt for the AI agent\n\nThe final output is a clear, contextual instruction like:\n*\"You are a senior iOS developer. Please review the following code changes in these files...\"*\n",
              "height": 240,
              "width": 360,
              "color": 2
            },
            "id": "907b58cb-4187-4b56-a117-41a8eacfd352",
            "name": "Sticky Note2",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              0,
              0
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "content": "**Github Comment Poster**\nPosts the AI-generated review as a comment on the pull request using GitHub API.",
              "color": 5
            },
            "id": "a73d9666-c5f9-4dd3-8b54-b8b0abaaf477",
            "name": "Sticky Note3",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              624,
              80
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "promptType": "define",
              "text": "={{ $json.user_message }}",
              "options": {}
            },
            "id": "5df7e725-2136-4aec-a303-750e41cecd96",
            "name": "Code Review Agent",
            "type": "@n8n/n8n-nodes-langchain.agent",
            "position": [
              352,
              272
            ],
            "typeVersion": 1.9
          },
          {
            "parameters": {
              "content": "**PR Labeler (optional)**\nAutomatically adds a label like *ReviewedByAI* to the pull request once the AI comment is posted.",
              "height": 120,
              "color": 7
            },
            "id": "cb676e1e-7d50-4aec-94c2-5d4ecabb5db3",
            "name": "Sticky Note4",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              880,
              128
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "content": "**Google Sheet Best Practices**\nEnables the AI agent to reference to your team coding guidelines stored in a Google Sheet for more accurate and opinionated reviews.\nYou can replace Google Sheets with any other database or tool.",
              "width": 260,
              "color": 6
            },
            "id": "015e62b4-403f-4f46-94f6-422f07960360",
            "name": "Sticky Note5",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              608,
              464
            ],
            "typeVersion": 1
          }
        ],
        "connections": {
          "PR Trigger": {
            "main": [
              [
                {
                  "node": "Get file's Diffs from PR",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "GitHub Robot": {
            "main": [
              [
                {
                  "node": "Add Label to PR",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Code Review Agent": {
            "main": [
              [
                {
                  "node": "GitHub Robot",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "OpenAI Chat Model": {
            "ai_languageModel": [
              [
                {
                  "node": "Code Review Agent",
                  "type": "ai_languageModel",
                  "index": 0
                }
              ]
            ]
          },
          "Code Best Practices": {
            "ai_tool": [
              [
                {
                  "node": "Code Review Agent",
                  "type": "ai_tool",
                  "index": 0
                }
              ]
            ]
          },
          "Get file's Diffs from PR": {
            "main": [
              [
                {
                  "node": "Create target Prompt from PR Diffs",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Create target Prompt from PR Diffs": {
            "main": [
              [
                {
                  "node": "Code Review Agent",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          }
        },
        "settings": {
          "executionOrder": "v1"
        },
        "staticData": null,
        "meta": null,
        "pinData": {},
        "versionId": "56aa043b-83c1-45e7-9a66-827be761ec7c",
        "triggerCount": 0,
        "shared": [
          {
            "createdAt": "2025-09-22T12:48:56.558Z",
            "updatedAt": "2025-09-22T12:48:56.558Z",
            "role": "workflow:owner",
            "workflowId": "pKdCthU583MCDBkX",
            "projectId": "XDSXqJERuGM10SXD"
          }
        ],
        "tags": []
      },
      {
        "createdAt": "2025-09-22T12:50:00.163Z",
        "updatedAt": "2025-09-22T12:50:00.163Z",
        "id": "1P2AaNcIfAkv32lE",
        "name": "sendgrid",
        "active": false,
        "isArchived": false,
        "nodes": [
          {
            "parameters": {
              "rule": {
                "interval": [
                  {}
                ]
              }
            },
            "id": "7f31111a-8105-4a79-ab0b-fb91451027f6",
            "name": "Schedule Trigger",
            "type": "n8n-nodes-base.scheduleTrigger",
            "position": [
              -144,
              144
            ],
            "typeVersion": 1.2
          },
          {
            "parameters": {
              "filters": {},
              "requestOptions": {}
            },
            "id": "7240d4ff-e543-4d63-9e8b-86d7ffb0ca56",
            "name": "Retrieve workflows",
            "type": "n8n-nodes-base.n8n",
            "position": [
              352,
              144
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "fieldsToAggregate": {
                "fieldToAggregate": [
                  {
                    "fieldToAggregate": "name"
                  }
                ]
              },
              "options": {}
            },
            "id": "0791d828-5049-4816-85b4-2b15c305d5a8",
            "name": "Aggregate",
            "type": "n8n-nodes-base.aggregate",
            "position": [
              192,
              144
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "authentication": "oAuth2",
              "resource": "file",
              "operation": "list",
              "owner": {
                "__rl": true,
                "mode": "name",
                "value": ""
              },
              "repository": {
                "__rl": true,
                "mode": "list",
                "value": ""
              },
              "filePath": "="
            },
            "id": "1c42399e-cae7-462d-8bd0-45b33bd00480",
            "name": "List files from repo",
            "type": "n8n-nodes-base.github",
            "position": [
              32,
              144
            ],
            "webhookId": "354d699e-44b0-4444-9d31-af7fd4ff5561",
            "typeVersion": 1,
            "alwaysOutputData": true
          },
          {
            "parameters": {
              "authentication": "oAuth2",
              "resource": "file",
              "operation": "edit",
              "owner": {
                "__rl": true,
                "mode": "name",
                "value": ""
              },
              "repository": {
                "__rl": true,
                "mode": "list",
                "value": ""
              },
              "filePath": "={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json",
              "fileContent": "={{ $('To base64').item.json.data }}",
              "commitMessage": "=backup-{{ $('Commit date & file name').item.json.commitDate }}"
            },
            "id": "3c1bef00-19a2-46e7-9dd9-f7847a9a34b2",
            "name": "Update file",
            "type": "n8n-nodes-base.github",
            "position": [
              1152,
              64
            ],
            "webhookId": "27218087-8df7-474d-a39f-70cfa9c34ec8",
            "typeVersion": 1
          },
          {
            "parameters": {
              "authentication": "oAuth2",
              "resource": "file",
              "owner": {
                "__rl": true,
                "mode": "name",
                "value": ""
              },
              "repository": {
                "__rl": true,
                "mode": "list",
                "value": ""
              },
              "filePath": "={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json",
              "fileContent": "={{ $('To base64').item.json.data }}",
              "commitMessage": "=backup-{{ $node['Commit date & file name'].json.commitDate }}"
            },
            "id": "9d950987-8e8d-41a9-ad8e-a19977b04b8e",
            "name": "Upload file",
            "type": "n8n-nodes-base.github",
            "position": [
              1152,
              224
            ],
            "webhookId": "ce4b561b-acb9-4cd8-b76f-4928dada9674",
            "typeVersion": 1
          },
          {
            "parameters": {
              "conditions": {
                "string": [
                  {
                    "value1": "={{ $('Aggregate').item.json.name }}",
                    "operation": "contains",
                    "value2": "={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json"
                  }
                ]
              }
            },
            "id": "2f8f60ed-5c64-4c6b-8291-67f39aa514a1",
            "name": "Check if file exists",
            "type": "n8n-nodes-base.if",
            "position": [
              992,
              144
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "operation": "toJson",
              "mode": "each",
              "options": {
                "format": true
              }
            },
            "id": "4e469ff7-393a-4d60-b4e8-ee107b9b71d3",
            "name": "Json file",
            "type": "n8n-nodes-base.convertToFile",
            "position": [
              512,
              144
            ],
            "typeVersion": 1.1
          },
          {
            "parameters": {
              "operation": "binaryToPropery",
              "options": {}
            },
            "id": "e3fc1fc9-2bed-4031-993f-d0600983e2c8",
            "name": "To base64",
            "type": "n8n-nodes-base.extractFromFile",
            "position": [
              672,
              144
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "content": "### Retrieve previous file names from Github",
              "height": 380,
              "width": 300,
              "color": 5
            },
            "id": "5559a361-59d4-43ba-96f3-049da6fb7754",
            "name": "Sticky Note1",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              0,
              0
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "assignments": {
                "assignments": [
                  {
                    "id": "fe4a36ef-9f04-40e3-99bd-cc517a49b440",
                    "name": "commitDate",
                    "type": "string",
                    "value": "={{ $now.format('dd-MM-yyyy/H:mm') }}"
                  },
                  {
                    "id": "b0fe1bcc-e79c-4a6b-b8b4-44222c8bf4e8",
                    "name": "fileName",
                    "type": "string",
                    "value": "={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json"
                  }
                ]
              },
              "options": {}
            },
            "id": "73abe95f-326b-4d9c-910b-5b583b210e01",
            "name": "Commit date & file name",
            "type": "n8n-nodes-base.set",
            "position": [
              832,
              144
            ],
            "typeVersion": 3.4
          },
          {
            "parameters": {
              "content": "### Retrieve and process workflows from n8n",
              "height": 380,
              "width": 460,
              "color": 3
            },
            "id": "661e53c4-b85a-41fc-b136-f6d26625b995",
            "name": "Sticky Note2",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              320,
              0
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "content": "### Commit + edit/create files if needed",
              "height": 380,
              "width": 460,
              "color": 4
            },
            "id": "b86f3f05-b8fa-433c-ad7c-d22254b711d1",
            "name": "Sticky Note3",
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              800,
              0
            ],
            "typeVersion": 1
          },
          {
            "parameters": {},
            "id": "a2e778fc-9b40-4507-8ce9-9122ea0237b3",
            "name": "On clicking 'execute'",
            "type": "n8n-nodes-base.manualTrigger",
            "position": [
              528,
              736
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "triggerTimes": {
                "item": [
                  {
                    "mode": "custom",
                    "cronExpression": "15 7 * * 1-6"
                  }
                ]
              }
            },
            "id": "ce77c568-3c51-40bb-bc91-9052ffb5d10b",
            "name": "Cron",
            "type": "n8n-nodes-base.cron",
            "position": [
              528,
              528
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "databaseId": 146,
              "tableId": 680,
              "additionalOptions": {}
            },
            "id": "79ade368-12fd-455b-9e72-4e6b3197f5f5",
            "name": "Baserow",
            "type": "n8n-nodes-base.baserow",
            "position": [
              752,
              640
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "url": "https://www.tradegate.de/orderbuch.php",
              "responseFormat": "string",
              "options": {},
              "queryParametersUi": {
                "parameter": [
                  {
                    "name": "isin",
                    "value": "={{$json[\"ISIN\"]}}"
                  }
                ]
              }
            },
            "id": "34e28684-5c8a-4991-b148-60075bb18e2c",
            "name": "Fetch tradegate stock page",
            "type": "n8n-nodes-base.httpRequest",
            "position": [
              976,
              640
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "extractionValues": {
                "values": [
                  {
                    "key": "WKN",
                    "cssSelector": "#col1_content > table > tbody > tr:nth-child(2) > td:nth-child(1)"
                  },
                  {
                    "key": "ISIN",
                    "cssSelector": "#col1_content > table > tbody > tr:nth-child(2) > td:nth-child(3)"
                  },
                  {
                    "key": "Currency",
                    "cssSelector": "#col1_content > table > tbody > tr:nth-child(2) > td:nth-child(4)"
                  },
                  {
                    "key": "Name",
                    "cssSelector": "#col1_content > h2"
                  },
                  {
                    "key": "Bid",
                    "cssSelector": "#bid"
                  },
                  {
                    "key": "Ask",
                    "cssSelector": "#ask"
                  }
                ]
              },
              "options": {}
            },
            "id": "38e45cc0-f70a-4ed3-bc58-4ef0b7d98ff6",
            "name": "Parse tradegate stock page",
            "type": "n8n-nodes-base.htmlExtract",
            "position": [
              1200,
              640
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "functionCode": "const columns = Object.keys(items[0].json);\n\n// Define the basic table structure\nlet table_header = `<table style=\"border: 1px solid black; border-collapse: collapse;\"><tr>${columns.map(e => '<th style=\"border: 1px solid black; border-collapse: collapse;\">' + e + '</th>').join('')}</tr>`;\nlet table_content = \"\";\nlet table_footer = '</table>';\n\n// Add content to our table\nfor (item of items) {\n    table_content += '<tr>'\n    for (column of columns) {\n        table_content += `<td style=\\\"border: 1px solid black; border-collapse: collapse;\\\">${item.json[column]}</td>`\n    }\n    table_content += '</tr>'\n}\n\n// Prepare HTML email body\nconst email_html = `<body style=\"font-family: Sans-Serif;\">\n<p>Investments as of ${$now.setZone(\"Europe/Dublin\").setLocale('ie').toFormat('fff')}:</p>\n${table_header}\n${table_content}\n${table_footer}\n<p>Total: ${items.map(e => parseFloat(e.json['Current Value'])).reduce((a, b) => a + b, 0).toFixed(2)}</p>\n<p><small>Workflow #${$workflow.id}</small></p>\n</body>`\n\n\nreturn [{\n    json: {\n        html: email_html\n    }\n}];"
            },
            "id": "8dbeb71d-6896-4f19-8f8b-36c3990e3c16",
            "name": "Build HTML",
            "type": "n8n-nodes-base.function",
            "position": [
              1856,
              640
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "keepOnlySet": true,
              "values": {
                "string": [
                  {
                    "name": "Name",
                    "value": "={{ $node[\"Baserow\"].json[\"Name\"] }}"
                  },
                  {
                    "name": "ISIN",
                    "value": "={{ $node[\"Baserow\"].json[\"ISIN\"] }}"
                  },
                  {
                    "name": "Count",
                    "value": "={{ $node[\"Baserow\"].json[\"Count\"] }}"
                  },
                  {
                    "name": "Purchase Price",
                    "value": "={{ $node[\"Baserow\"].json[\"Purchase Price\"] }}"
                  },
                  {
                    "name": "Current Value",
                    "value": "={{ (parseFloat($json[\"Bid\"].replace(',', '.')) * parseFloat($node[\"Baserow\"].json[\"Count\"])).toFixed(2) }}"
                  }
                ]
              },
              "options": {}
            },
            "id": "fd5d0e51-8c3c-4509-8cc5-2bd10a348c93",
            "name": "Format result",
            "type": "n8n-nodes-base.set",
            "position": [
              1408,
              640
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "values": {
                "string": [
                  {
                    "name": "Change",
                    "value": "={{ ( parseFloat($json[\"Current Value\"]) - parseFloat($json[\"Purchase Price\"]) ).toFixed(2) }}"
                  },
                  {
                    "name": "Change (%)",
                    "value": "={{ ( ( ( parseFloat($json[\"Current Value\"]) - parseFloat($json[\"Purchase Price\"]) ) / parseFloat($json[\"Purchase Price\"]) ) * 100).toFixed(2) }}"
                  }
                ]
              },
              "options": {}
            },
            "id": "3e336b71-30b7-4b47-9449-c5218468c874",
            "name": "Calculate change",
            "type": "n8n-nodes-base.set",
            "position": [
              1632,
              640
            ],
            "typeVersion": 1
          },
          {
            "parameters": {
              "resource": "mail",
              "fromEmail": "mutedjam@n8n.io",
              "toEmail": "mutedjam@n8n.io",
              "subject": "Investment report",
              "contentType": "text/html",
              "contentValue": "={{ $json[\"html\"] }}",
              "additionalFields": {}
            },
            "id": "a7b1c388-0c2e-4a14-936a-a2e6ccebf05d",
            "name": "SendGrid",
            "type": "n8n-nodes-base.sendGrid",
            "position": [
              2080,
              640
            ],
            "typeVersion": 1
          }
        ],
        "connections": {
          "Aggregate": {
            "main": [
              [
                {
                  "node": "Retrieve workflows",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Json file": {
            "main": [
              [
                {
                  "node": "To base64",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "To base64": {
            "main": [
              [
                {
                  "node": "Commit date & file name",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Schedule Trigger": {
            "main": [
              [
                {
                  "node": "List files from repo",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Retrieve workflows": {
            "main": [
              [
                {
                  "node": "Json file",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Check if file exists": {
            "main": [
              [
                {
                  "node": "Update file",
                  "type": "main",
                  "index": 0
                }
              ],
              [
                {
                  "node": "Upload file",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "List files from repo": {
            "main": [
              [
                {
                  "node": "Aggregate",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Commit date & file name": {
            "main": [
              [
                {
                  "node": "Check if file exists",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Cron": {
            "main": [
              [
                {
                  "node": "Baserow",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Baserow": {
            "main": [
              [
                {
                  "node": "Fetch tradegate stock page",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Build HTML": {
            "main": [
              [
                {
                  "node": "SendGrid",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Format result": {
            "main": [
              [
                {
                  "node": "Calculate change",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Calculate change": {
            "main": [
              [
                {
                  "node": "Build HTML",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "On clicking 'execute'": {
            "main": [
              [
                {
                  "node": "Baserow",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Fetch tradegate stock page": {
            "main": [
              [
                {
                  "node": "Parse tradegate stock page",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Parse tradegate stock page": {
            "main": [
              [
                {
                  "node": "Format result",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          }
        },
        "settings": {
          "executionOrder": "v1"
        },
        "staticData": null,
        "meta": null,
        "pinData": {},
        "versionId": "d5e3795d-b1a1-4bbe-9d7a-161125634fcf",
        "triggerCount": 0,
        "shared": [
          {
            "createdAt": "2025-09-22T12:50:00.163Z",
            "updatedAt": "2025-09-22T12:50:00.163Z",
            "role": "workflow:owner",
            "workflowId": "1P2AaNcIfAkv32lE",
            "projectId": "XDSXqJERuGM10SXD"
          }
        ],
        "tags": []
      },
      {
        "createdAt": "2025-09-22T13:27:14.985Z",
        "updatedAt": "2025-09-22T13:27:14.985Z",
        "id": "XUFVgmJKOZIxoiMJ",
        "name": "My workflow 2",
        "active": false,
        "isArchived": false,
        "nodes": [
          {
            "parameters": {
              "operation": "copy"
            },
            "type": "n8n-nodes-base.dropbox",
            "typeVersion": 1,
            "position": [
              -112,
              -32
            ],
            "id": "87293ac6-21a3-4aa7-90b3-0d3373dcf5f9",
            "name": "Copy a file"
          },
          {
            "parameters": {
              "resource": "folder",
              "operation": "copy"
            },
            "type": "n8n-nodes-base.dropbox",
            "typeVersion": 1,
            "position": [
              -384,
              -32
            ],
            "id": "467a2f2a-cf81-4805-8fe2-80900fc885c0",
            "name": "Copy a folder"
          },
          {
            "parameters": {
              "resource": "search",
              "filters": {}
            },
            "type": "n8n-nodes-base.dropbox",
            "typeVersion": 1,
            "position": [
              128,
              -32
            ],
            "id": "fa0e8cfa-4601-4ad8-88d7-edfd5349982e",
            "name": "Query"
          }
        ],
        "connections": {
          "Copy a file": {
            "main": [
              []
            ]
          },
          "Copy a folder": {
            "main": [
              []
            ]
          }
        },
        "settings": {
          "executionOrder": "v1"
        },
        "staticData": null,
        "meta": null,
        "pinData": {},
        "versionId": "c83b477c-7024-4c09-b392-bfa81204642c",
        "triggerCount": 0,
        "shared": [
          {
            "createdAt": "2025-09-22T13:27:14.985Z",
            "updatedAt": "2025-09-22T13:27:14.985Z",
            "role": "workflow:owner",
            "workflowId": "XUFVgmJKOZIxoiMJ",
            "projectId": "XDSXqJERuGM10SXD"
          }
        ],
        "tags": []
      }
    ],
    "nextCursor": null
  },
  "": null
}